{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","hooks/useForm.js","components/08-useReducer/TodoAdd.js","components/08-useReducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","onClick","desc","TodoList","t","i","useForm","initialState","useState","formValue","setFormValue","reset","handleInputChange","target","name","value","TodoAdd","handleAddTodo","description","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fed66b97.chunk.js","sourcesContent":["// me creo la funcion reducer aparte\n\nexport const todoReducer = (state = [], action) => {\n    // en vez de usar if us switch\n\n    switch (action.type) {\n        case 'add':\n            return [...state, action.payload]\n   \n        case'delete':\n        return state.filter(todo => todo.id !== action.payload)\n\n        case'toggle':\n        return state.map(todo =>\n            (todo.id === action.payload)\n               ?{...todo, done:!todo.done}\n               :todo\n            );\n\n        case 'toggle-old':\n            return state.map(todo => {\n\n                if(todo.id === action.payload){\n                    return{\n                        ...todo,\n                        done: !todo.done\n                    }\n                }else{\n                        return todo;\n                    }\n\n            })\n        default:\n            return state;\n    }\n    \n\n\n}\n","import React from 'react';\n//import PropTypes from 'prop-types';\n\nconst TodoListItem = ({todo, index, handleDelete, handleToggle}) => {\n    return (\n        <>\n           <li\n                   key={todo.id}\n                   className=\"list-group-item\"\n                 >\n                <p \n                className={`${todo.done && 'complete'}`}\n                onClick={()=> handleToggle(todo.id)}\n                > \n                {index + 1}. {todo.desc} \n                </p>   \n                 <button \n                 className=\"btn btn-danger\"\n                  onClick={() => handleDelete(todo.id)}>Delete</button>\n                 </li> \n        </>\n    )\n}\n// TodoListItem.propTypes = {\n//     todo : PropTypes.object,\n//     handleDelete: PropTypes.func,\n//     handleToggle: PropTypes.func\n// }\nexport default TodoListItem\n","import React from 'react';\n//import PropTypes from 'prop-types';\nimport TodoListItem from './TodoListItem';\n\n\nconst TodoList = ({todo, handleToggle, handleDelete}) => {\n    return (\n        <>\n           <ul className=\"list-group list-group-flush\">\n         {\n             todo.map((t, i) => (\n                 // TodoListItem, todo, index, \n                <TodoListItem  key={t.id} todo ={t} index={i} handleDelete={handleDelete} handleToggle={handleToggle} />\n             ))\n         }\n     </ul>   \n        \n        </>\n    )\n}\n// TodoList.propTypes = {\n//     todo : PropTypes.object,\n//     handleDelete: PropTypes.func,\n//     handleToggle: PropTypes.func\n// }\n export default TodoList\n","import {useState} from 'react'\n\n\nconst useForm = (initialState = {}) => {\n //quiero manejar el uso de mi estado tal como lo tengo en el otro componente\n const [formValue, setFormValue] = useState(initialState);\n\n  const reset = () => {\n      setFormValue(initialState)\n  }\n\n const handleInputChange = ({target}) => {\n     setFormValue({\n         ...formValue,\n         [target.name]:target.value\n     });\n }\n  return [formValue, handleInputChange, reset]\n}\n\nexport default useForm\n","import React from 'react';\nimport useForm from '../../hooks/useForm'\n\n\nconst TodoAdd = ({handleAddTodo}) => {\n\n    //useForm\n  const [{description}, handleInputChange, reset] = useForm({\n    description:''\n  })\n\n  const handleSubmit = (e) => {\n\n      e.preventDefault();\n      if(description.trim().length <=1){\n        return;\n      };\n\n      //creo un nuevo toDO\n      const newTodo ={\n        id: new Date().getTime(),\n        desc:description,\n        done:false\n      }\n      handleAddTodo(newTodo);\n      reset();\n  }\n\n    return (\n        <>\n          <h4>Add Todo</h4>\n            <hr/>\n\n            <form onSubmit={handleSubmit}>\n                <input\n                 type=\"text\"\n                 name=\"description\"\n                 className=\"form-control\"\n                 placeholder=\"Learning...\"\n                 autoComplete=\"off\"\n                 onChange={handleInputChange}\n                 value={description}\n                 />\n                 <button \n                   type=\"submit\"\n                  className=\"btn btn-outline-primary mt-1 btn-block\"\n                 >\n                     Add\n                 </button>\n            </form>    \n        \n        </>\n    )\n}\n\nexport default TodoAdd\n","import React, { useReducer, useEffect } from 'react';\nimport { todoReducer } from './todoReducer';\nimport TodoList from './TodoList';\nimport TodoAdd from './TodoAdd';\n\nimport './styles.css';\n\n\nconst init = () =>{\n\n  return JSON.parse(localStorage.getItem('todos')) || [];\n \n}\n\nconst TodoApp = () => {\n//al todoreducer lo hago en un archivo independiente\n  const [todo, dispatch] = useReducer(todoReducer, [], init);\n\n\n\n \nuseEffect(() => {\n   localStorage.setItem('todos', JSON.stringify(todo))\n }, [todo]);\n\n //borrar todo\nconst handleDelete = (todoId) => {\n        console.log(todoId)\n\n      const actionDelete = {\n        type:'delete',\n        payload:todoId\n      }\n    \n      dispatch(actionDelete)\n    }\n\n  // hacer fn para marcar como completada la tarea\n    \nconst handleToggle = (todoId) => {\n    \n      dispatch({\n        type:'toggle',\n        payload: todoId\n      })\n\n    }\nconst handleAddTodo = (newTodo) => {\n       \n        dispatch({\n        type:'add',\n        payload: newTodo\n      })\n\n    }\n\n\n  \n\n\n  return (\n    <div>\n    <h1>TodoApp({todo.length})</h1>\n    <hr/>\n       \n    <div className=\"row\">\n\n        <div className=\"col-7\">\n          \n        <TodoList todo={todo} handleToggle={handleToggle} handleDelete={handleDelete}/>\n        </div>\n        \n        <div className=\"col-5\">\n            <TodoAdd handleAddTodo={handleAddTodo} />\n            \n        </div>\n\n    </div>\n    \n    </div>\n  )\n}\n\nexport default TodoApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import CounterApp from './components/01-useState/CounterApp';\n// import HookApp from './HookApp';\n//import CounterWithCustomHook from './components/01-useState/CounterWithCustomHook';\n//import SimpleForm from './components/02-useEffect/SimpleForm';\n//import {FormWithCustomHook} from './components/02-useEffect/FormWithCustomHook';\n//import MultipleCutomHooks from './components/03-examples/MultipleCutomHooks';\n//import FocusScreen from './components/04-useRef/FocusScreen';\n//import RealExampleRef from './components/04-useRef/RealExampleRef';\n//import Layout from './components/05-useLayoutEffect/Layout';\n//import Memoize from './components/06-memos/Memoize';\n// import {Padre} from './components/07-tarea-memo/Padre';\nimport TodoApp from './components/08-useReducer/TodoApp';\n//import MainApp from './components/09-useContex/MainApp';\nReactDOM.render(\n    <TodoApp/>,\n  document.getElementById('root')\n  \n\n);\n\n\n"],"sourceRoot":""}